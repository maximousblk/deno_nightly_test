name: ci

on:
  workflow_dispatch: # manual trigger
  schedule:
    - cron: '0 0 * * *' # Everyday at ~00:00 UTC

jobs:
  prep:
    runs-on: ubuntu-latest

    outputs:
      tag: ${{ steps.now.outputs.formattedTime }}
      head: ${{ steps.commit.outputs.hash }}

    steps:
      - name: Get Date # To use as tag
        uses: 1466587594/get-current-time@v1
        id: now
        with:
          format: YYYY.MM.DD

      - name: Clone repository
        uses: actions/checkout@v2
        with:
          repository: 'crowlKats/deno'
          ref: nightly_upgrade
          fetch-depth: 1
          submodules: false

      - name: Get commit hash # To keep every build on same commit
        id: commit
        run: echo "::set-output name=hash::$(git rev-parse HEAD)"

      - name: Setup Deno
        uses: denolib/setup-deno@v2
        with:
          deno-version: v1.5.2

      - name: Generate Release Notes
        run: deno run -A https://github.com/maximousblk/nightly/raw/master/.github/notes.ts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_TAG: ${{ steps.now.outputs.formattedTime }}
          HEAD_COMMIT: ${{ steps.commit.outputs.hash }}

      - name: Upload release notes
        uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error
          name: notes
          path: notes.md

  build:
    name: build / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    needs: prep

    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]

    env:
      CARGO_INCREMENTAL: 0
      RUST_BACKTRACE: full
      CARGO_TERM_COLOR: always
      DENO_NIGHTLY: ${{ needs.prep.outputs.tag }}

    steps:
      - name: Enable long paths on windows
        if: startsWith(matrix.os, 'windows')
        run: git config --global core.longpaths true

      - name: Clone repository
        uses: actions/checkout@v2
        with:
          repository: 'crowlKats/deno'
          ref: ${{ needs.prep.outputs.head }}
          fetch-depth: 1
          submodules: true

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.47.0
          default: true
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --locked --all-targets

      - name: Zip linux release
        if: startsWith(matrix.os, 'ubuntu')
        working-directory: target/release
        run: zip -r deno-x86_64-unknown-linux-gnu.zip deno

      - name: Zip mac release
        if: startsWith(matrix.os, 'macos')
        working-directory: target/release
        run: zip -r deno-x86_64-apple-darwin.zip deno

      - name: Zip windows release
        if: startsWith(matrix.os, 'windows')
        working-directory: target/release
        run: Compress-Archive -Path deno.exe -DestinationPath deno-x86_64-pc-windows-msvc.zip -CompressionLevel Optimal -Force

      - name: Export Type Docs
        if: startsWith(matrix.os, 'ubuntu')
        working-directory: target/release
        run: ./deno types > lib.deno.d.ts

      - name: Upload Builds
        uses: actions/upload-artifact@v2
        with:
          name: release
          path: |
            target/release/deno-x86_64-unknown-linux-gnu.zip
            target/release/deno-x86_64-apple-darwin.zip
            target/release/deno-x86_64-pc-windows-msvc.zip
            target/release/lib.deno.d.ts

  release:
    needs: [prep, build]
    runs-on: ubuntu-latest

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2

      - name: Release
        uses: ncipollo/release-action@v1
        with:
          tag: '${{ needs.prep.outputs.tag }}'
          name: '${{ needs.prep.outputs.tag }}'
          artifacts: 'release/*'
          bodyFile: 'notes/notes.md'
          token: ${{ secrets.GITHUB_TOKEN }}
